[global]
error_log = /proc/self/fd/2
daemonize = no

[www]
user = www-data
group = www-data
listen = 127.0.0.1:9000

pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.status_path = /_health/php

; If we send this to /proc/self/fd/1, it never appears
access.log = /proc/self/fd/2
access.format = "%t \"%m %r%Q%q\" %s %{mili}dms %{kilo}Mkb %C%%"

; Make all environment variables available to PHP code via getenv(), $_ENV and $_SERVER
clear_env = no

; Ensure worker stdout and stderr are sent to the main error log.
catch_workers_output = yes

; Additional php.ini defines, specific to this pool of workers. These settings
; overwrite the values previously defined in the php.ini. The directives are the
; same as the PHP SAPI:
;   php_value/php_flag             - you can set classic ini defines which can
;                                    be overwritten from PHP call 'ini_set'.
;   php_admin_value/php_admin_flag - these directives won't be overwritten by
;                                     PHP call 'ini_set'
; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.
; Defining 'extension' will load the corresponding shared extension from
; extension_dir. Defining 'disable_functions' or 'disable_classes' will not
; overwrite previously defined php.ini values, but will append the new value
; instead.
php_flag[display_errors] = off
php_flag[log_errors] = on
php_value[error_log] = /proc/self/fd/1
php_admin_flag[expose_php] = off
php_admin_value[cgi.fix_pathinfo] = 0
